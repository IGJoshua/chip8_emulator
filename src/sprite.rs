pub struct Sprite {
    pub rows: Vec<u8>,
}

pub const SPRITE_SIZE: u8 = 5;

pub fn init_sprites() -> [Sprite; 0x10] {
    [Sprite { rows: vec![0xF0, 0x90, 0x90, 0x90, 0xF0], },
     Sprite { rows: vec![0x20, 0x60, 0x20, 0x20, 0x70], },
     Sprite { rows: vec![0xF0, 0x10, 0xF0, 0x80, 0xF0], },
     Sprite { rows: vec![0xF0, 0x10, 0xF0, 0x10, 0xF0], },
     Sprite { rows: vec![0x90, 0x90, 0xF0, 0x10, 0x10], },
     Sprite { rows: vec![0xF0, 0x80, 0xF0, 0x10, 0xF0], },
     Sprite { rows: vec![0xF0, 0x80, 0xF0, 0x90, 0xF0], },
     Sprite { rows: vec![0xF0, 0x10, 0x20, 0x40, 0x40], },
     Sprite { rows: vec![0xF0, 0x90, 0xF0, 0x90, 0xF0], },
     Sprite { rows: vec![0xF0, 0x90, 0xF0, 0x10, 0xF0], },
     Sprite { rows: vec![0xF0, 0x90, 0xF0, 0x90, 0x90], },
     Sprite { rows: vec![0xE0, 0x90, 0xE0, 0x90, 0xE0], },
     Sprite { rows: vec![0xF0, 0x80, 0x80, 0x80, 0xF0], },
     Sprite { rows: vec![0xE0, 0x90, 0x90, 0x90, 0xE0], },
     Sprite { rows: vec![0xF0, 0x80, 0xF0, 0x80, 0xF0], },
     Sprite { rows: vec![0xF0, 0x80, 0xF0, 0x80, 0x80], }]
}
